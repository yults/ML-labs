const readline = require('readline');
const put = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

let k1, k2, n, m1 = new Map(), m2 = new Map(), m12 = new Map();

put.on('line', (line) => {
    if (!k1) [k1, k2] = line.split(' ').map(Number);
    else if (!n) n = Number(line);
    else {
        const [a, b] = line.split(' ').map(Number);
        m1.set(a, (m1.get(a) || 0) + 1);
        m2.set(b, (m2.get(b) || 0) + 1);
        const key = `${a},${b}`;
        m12.set(key, (m12.get(key) || 0) + 1);
    }
});

(async () => {
    await new Promise(resolve => put.on('close', resolve));
    let sum = 0;
    for (const [key, val] of m12.entries()) {
        const [a, b] = key.split(',').map(Number);
        sum += Math.pow(val, 2) / (m1.get(a) * m2.get(b));
    }
    console.log(n * sum - n);
})();
